name: 'Build on Release'

on:
  schedule:
   - cron:  '0 0 * * *' #scheduled at 00:00 everyday
  workflow_dispatch: {}

jobs:
  get-envoy-versions:
    runs-on: ubuntu-latest
    outputs:
      versions_to_release: ${{ steps.get-versions-to-release.outputs.versions_to_release }}
    steps:
      - name: Check Envoy released versions
        id: check-envoy-released-versions
        run: |
          envoy_versions=$(gh api repos/envoyproxy/envoy/releases --jq '.[] | {tag_name, created_at} | select(((now | tonumber) - ((.created_at | fromdate) | tonumber)) < (24 * 3600)) | .tag_name')
          echo "envoy_versions=$envoy_versions" >> $GITHUB_OUTPUT
      - name: Get Envoy versions to release
        id: get-versions-to-release
        run: |
          versions_to_release=()
          eval "envoy_versions=(${{ steps.check-envoy-released-versions.outputs.envoy_versions }})"
          for envoy_version in $envoy_versions; do
            echo "Checking if $envoy_version has been already released"
            version=$(gh api repos/kumahq/envoy-builds/releases --jq   ".[] | select(.tag_name == \"$envoy_version\") | .tag_name")
            if [ -z "$version" ]; then
              echo "No version found for $envoy_version"
              versions_to_release+=$envoy_version
            else
              echo "Envoy $version already released, skip"
            fi
          done
          echo "::set-output name=versions_to_release::$(echo ${versions_to_release[@]} | jq -R -s -c 'split(" ")')"
  trigger-release:
    needs: get-envoy-versions
    strategy:
      matrix:
        version: ${{ fromJson(needs.get-envoy-versions.outputs.versions_to_release) }}
      # fail-fast: false
    # uses: ./.github/workflows/build-and-release.yaml
    # with:
    #   version: ${{ matrix.version }}
    steps:
      - name: test
        run: |
          echo ${{ matrix.version }}


        